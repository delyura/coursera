# Описание задания
# В этом задании придется написать свой конвертер валют (см. приложенный файл). Курсы валют нужно брать из API Центробанка. Документация по нему тут, потребуется только XML_daily.asp.
# В функцию convert(amount, cur_from, cur_to, date, requests) будет передана сумма amount в валюте с кодом cur_from, и её требуется перевести в валюту cur_to через рубль (код: RUR). Для запроса к API нужно использовать переданный requests, точнее, его метод get()
# Все суммы и курсы требуется хранить в Decimal, т.к. для финансовых данных вычисления с фиксированной точкой подходят больше.
# Конечный результат нужно округлить до 4-х знаков, перед тем как вернуть его из функции. Посмотрите метод quantize().
# Для некоторых валют курс возвращается из расчета не на одну денежную единицу указанной валюты, а на 10 или даже 100, поэтому у курса валюты в XML есть не только Value, но и Nominal, и справедлива формула: Nominal ед. валюты = Value рублей.
# При проверке на сервере сеть недоступна. В функцию будет передан фейковый requests, его интерфейс и response аналогичны настоящему. Если его использовать в объеме, требуемом для задания, разницы не будет заметно.

import requests
from bs4 import BeautifulSoup
from decimal import Decimal

def convert(amount, cur_from, cur_to, date):
    response = requests.get("https://www.cbr.ru/scripts/XML_daily.asp?date_req={}".format(date))
    result = amount * (Decimal(str(soup.find('CharCode', text=cur_from).find_next_sibling('Value').string).replace(',', '.')) if cur_from != cur_from else 1)
    soup = BeautifulSoup(response.content,"xml")
    value = Decimal(soup.find('CharCode', text=cur_to).find_next_sibling('Value').string.replace(',','.'))
    id = soup.find('CharCode', text='cur_to').parent['ID']
    nominal = Decimal(soup.find('Valute',ID=id).Nominal.string.replace(',','.'))
    result *= (nominal/value)
    return result.quantize(Decimal('1.0000'))
